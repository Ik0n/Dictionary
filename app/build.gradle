plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-parcelize'
    id 'kotlin-kapt'
}

android {
    compileSdk Config.compile_sdk

    defaultConfig {
        applicationId Config.application_id
        minSdk Config.min_sdk
        targetSdk Config.target_sdk
        versionCode Releases.version_code
        versionName Releases.version_name

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility Config.java_version
        targetCompatibility Config.java_version
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation project(Modules.core)
    implementation project(Modules.model)
    implementation project(Modules.repository)
    implementation project(Modules.utils)
    implementation project(Modules.historyScreen) //Feature

    implementation Kotlin.stdlib
    implementation Kotlin.core
    implementation Design.appcompat
    implementation Design.material
    implementation Design.constraint_layout
    implementation Design.swipe_refresh_layout

    //testImplementation Test.junit
    //androidTestImplementation Test.androidx_test_ext_junit
    //androidTestImplementation Test.espresso_core

    implementation Kotlin.lifecycle_viewmodel
    implementation Kotlin.lifecycle_viewmodel_ktx

    // Rx-java
    implementation Rx.rx_android
    implementation Rx.rx_java

    // Retrofit 2
    implementation Retrofit.retrofit
    implementation Retrofit.converter_gson
    implementation Retrofit.logging_interceptor
    //implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'

    // Dagger 2
    implementation Dagger.dagger_android
    implementation Dagger.dagger_android_support
    implementation project(path: ':model')
    kapt Dagger.dagger_compiler
    kapt Dagger.dagger_android_processor


    // Coroutines
    implementation Kotlin.coroutines_core
    implementation Kotlin.coroutines_android
    implementation Retrofit.adapter_coroutines

    // Koin
    implementation Koin.koin_core
    implementation Koin.koin_android
    implementation Koin.koin_android_compat
    //Picasso
    implementation Picasso.picasso
    //Glide
    implementation Glide.glide
    kapt Glide.compiler

    //Coil
    implementation Coil.coil

    //Room
    implementation Room.runtime
    kapt Room.compiler
    implementation Room.room_ktx

}

